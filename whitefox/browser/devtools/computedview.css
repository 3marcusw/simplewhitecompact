/* vim:set ts=2 sw=2 sts=2 et: */
/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

/* From content */

:root {
  box-sizing: border-box;
  height: 100%;
}

body {
  box-sizing: border-box;
  margin: 0;
  display : flex;
  flex-direction: column;
  height: 100%;
}

#sidebar-panel-computedview {
  box-sizing: border-box;
  margin: 0;
  display : flex;
  flex-direction: column;
  width: 100%;
  /* Bug 1243598 - Reduce the container height by the tab height to make room
     for the tabs above. */
  height: calc(100% - 24px);
  position: absolute;
}
.theme-firebug tabpanel#sidebar-panel-computedview {  /* Firefox 48-49 */
  height: calc(100% - 28px);
}

div#sidebar-panel-computedview {  /* Firefox >= 50 */
  height: 100%;
  position: initial;
}

#sidebar-panel-computedview > .devtools-toolbar {
  display: flex;
  height: 23px;
  min-height: 23px;
  box-sizing: content-box;
}

.theme-firebug #sidebar-panel-computedview > .devtools-toolbar {
  height: 23px !important; /* To override 28px setting in firebug-theme.css --johnGraciliano */
}

#computedview-container { /* Firefox >= 50 */
  overflow: auto;
  height: 100%;
}

/* This extra wrapper only serves as a way to get the content of the view focusable.
   So that when the user reaches it either via keyboard or mouse, we know that the view
   is focused and therefore can handle shortcuts.
   However, for accessibility reasons, tabindex is set to -1 to avoid having to tab
   through it, and the outline is hidden. */
#computedview-container-focusable {
  height: 100%;
  outline: none;
}

#computedview-toolbar { /* Firefox >= 50 */
  display: flex;
}

#browser-style-checkbox {
  /* Bug 1200073 - extra space before the browser styles checkbox so
     they aren't squished together in a small window. */
  -moz-margin-start: 5px;
  -moz-margin-end: 4px;
  margin-inline-start: 5px;
  margin-inline-end: 4px;
}

#browser-style-checkbox > * > .checkbox-label { /* Firefox <= 49 */
  margin: 0 !important; /* Needs to override !important elsewhere. --johnGraciliano */
}

#browser-style-checkbox-label { /* Firefox >= 50 */
  margin-inline-end: 5px; /* margin-right: 5px; */

  /* Vertically center the 'Browser styles' checkbox in the
     Computed panel with its label. */
  display: flex;
  align-items: center;
}

#browser-style-checkbox-label > #browser-style-checkbox { /* Firefox >= 50 */
  margin-inline-end: 5px;
}

#computedview-container > #propertyContainer REMOVED { /* Firefox >= 50 */
  border-top-width: 1px;
  border-top-style: dotted;
}

#propertyContainer {
  -moz-user-select: text;
  overflow-y: auto;
  overflow-x: hidden;
  flex: auto;
}
body > #propertyContainer { /* Firefox < 47 */
  min-height: 0;
  flex: 1;
}

.row-striped {
  background: var(--theme-body-background);
}

.property-view-hidden,
.property-content-hidden {
  display: none;
}

.property-view {
  padding: 2px 0;
  -moz-padding-start: 17px;
  padding-inline-start: 17px;
}
body > #propertyContainer > .property-view { /* Firefox <= 46 */
  clear: both;
}
:not(body) > #propertyContainer > .property-view { /* Firefox >= 47 */
  display: flex;
  flex-wrap: wrap;
}

.property-name-container {
  box-sizing: border-box;
  width: 202px;
}

.property-value-container {
  display: flex;
  flex: 1 1 168px;
  overflow: hidden;
}

.property-name-container > *,
.property-value-container > * {
  display: inline-block;
  vertical-align: middle;
}

body > #propertyContainer > .property-view > * {
  display: inline-block;
  vertical-align: middle;
}

:not(.property-name-container) > .property-name {
  box-sizing: border-box;
  /* -12px is so the expander triangle isn't pushed up above the property */
  width: calc(100% - 12px);
}
.property-name {
  overflow-x: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  outline: 0;
}

.property-value, .other-property-value {
  background-image: url(images/arrow-e.png);
  background-repeat: no-repeat;
  background-size: 5px 8px;
}

@media (min-resolution: 1.1dppx) {
  .property-value, .other-property-value {
    background-image: url(images/arrow-e@2x.png);
  }
}

:not(.property-value-container) > .property-value {
  box-sizing: border-box;
  width: 100%;
}
.property-value {
  overflow-x: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  background-position: 2px center;
  padding-left: 10px;
  outline: 0;
  position: relative; /* This is to make .computedview-colorswatch::before visible through semi-transparent colors. --johnGraciliano */
  z-index: 0; /* This is to make .computedview-colorswatch::before visible through semi-transparent colors. --johnGraciliano */
}
:-moz-locale-dir(rtl) > .property-value {
  padding-left: 2px;
  padding-right: 10px;
  background-position: calc(100% - 2px) center;
  background-image: none;  /* url(images/arrow-w@2x.png) */
  position: relative;
}
:-moz-locale-dir(rtl) > .property-value::after {
  content: "";
  position: absolute;
  right: 2px;
  top: 0;
  display: inline-block;
  background-image: url(images/arrow-e@2x.png);  /* url(images/arrow-w@2x.png) */
  background-size: 5px 8px;
  background-repeat: no-repeat;
  background-position: center;
  width: 5px;
  height: 100%;
  transform: scaleX(-1);
}

.other-property-value {
  background-position: left center;
  -moz-padding-start: 8px; /** padding-left: 8px;  --johnGraciliano **/
  -moz-margin-start: 4px;
  padding-inline-start: 8px;
  margin-inline-start: 4px;
  position: relative; /* This is to make .computedview-colorswatch::before visible through semi-transparent colors. --johnGraciliano */
  z-index: 0; /* This is to make .computedview-colorswatch::before visible through semi-transparent colors. --johnGraciliano */
}
.other-property-value:dir(rtl) {
  background-position: right center;
}

@media (min-width: 400px) {
  :not(.property-name-container) > .property-name {
    width: 200px;
  }
  :not(.property-value-container) > .property-value {
    /* -212px is accounting for the 200px property-name and the 12px triangle */
    width: calc(100% - 212px);
    width: calc(100% - 202px); /* 204px = 200 (property-name) + 2px (= 14px [expander width] - 14px [expander negative magin]) */
  }
}

.property-content {
  -moz-padding-start: 17px;  /* padding-left: 17px;  --johnGraciliano */
  padding-inline-start: 17px;
}

.theme-firebug .property-view,
.theme-firebug .property-content {
  font-family: var(--proportional-font-family);
}

.theme-firebug .property-view ~ .property-view { /* Lines before the next property --johnGraciliano */
  border-top:  1px solid rgba(0, 0, 0, 0.0625);
}

.theme-firebug .property-value,
.theme-firebug .other-property-value{
  color: #000;
}
.theme-firebug .property-name{
  font-weight: bold;
  color: #000;
}
.theme-firebug span.rule-text{
  font-weight: normal;
  color: #000;
}

/* From skin */
.expander {
  visibility: hidden;
  -moz-margin-start: -12px !important;  /* margin-left: -12px !important;  --johnGraciliano */
  margin-inline-start: -12px !important;
}
:root:not(.theme-firebug) .expander:not([open]):-moz-locale-dir(rtl) {
  transform: scaleX(-1);
}

.expandable {
  visibility: visible;
}

.match {
  visibility: hidden;
}

.matchedselectors > p {
  clear: both;
  margin: 0 2px 0 0;
  padding: 2px;
  overflow-x: hidden;
  border-style: dotted;
  border-color: rgba(128,128,128,0.4);
  border-width: 1px 1px 0 1px;
}
.matchedselectors > p:-moz-locale-dir(rtl) {
  margin: 0 0 0 2px;
}

.theme-firebug .matchedselectors > p {
  border-color: rgba(0,0,0,0.0625);
}

.matchedselectors > p:last-of-type {
  border-bottom-width: 1px;
}

.matched {
  text-decoration: line-through;
}

.parentmatch {
  opacity: 0.5;
}

#noResults { /* Used in Firefox <= 49 */
  font-size: 110%;
  margin: 5px;
  text-align: center;
}

#computedview-no-results { /* Used in Firefox 50 */
  height: 100%;
}

.onlyuserstyles {
  cursor: pointer;
}

.legendKey {
  margin: 0 5px;
}

#root .devtools-toolbar {
  box-sizing: border-box;
  width: 100%;
  display: flex;
}


#propertyContainer ~ #root > .devtools-toolbar{ /* Firefox 39 and earlier --johnGraciliano */
  display: -moz-box;
  border-bottom-width: 0px;
  border-top-width: 1px;
}

.link {
  padding: 0 3px;
  cursor: pointer;
  float: right;
}
.link:-moz-locale-dir(rtl) {
  float: left;
}

/* Take away these two :visited rules to get a core dumper     */
/* See https://bugzilla.mozilla.org/show_bug.cgi?id=575675#c30 */

.link,
.link:visited {
  color: #0091ff;
}

.link,
.helplink,
.link:visited,
.helplink:visited {
  text-decoration: none;
}

.link:hover {
  text-decoration: underline;
}

.theme-firebug .rule-link > .link {
  font-family: Lucida Grande, sans-serif;
  font-weight: bold;
  color: #0000FF;
}

/* This is not ready:  *********************************%
.rule-text {
  dir: inherit; %* Undo [dir=ltr] --johnGraciliano *%
}
%*******************************************************/

.computedview-colorswatch {
  box-sizing: border-box;
  border-radius: 50%;
  width: 0.9em;
  height: 0.9em;
  vertical-align: middle;
  -moz-margin-end: 5px;
  margin-inline-end: 5px;
  display: inline-block;
  position: relative;
}

.computedview-colorswatch::before {
  content: '';
  background-color: transparent;
  background-image: linear-gradient(to right, #fff 50%, #000 50%),
                    linear-gradient(to right, #000 50%, #fff 50%);
  background-size: 100% 50%;
  background-position: center top, center bottom;
  background-repeat: repeat-x, repeat-x;
  position: absolute;
  border-radius: 50%;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  z-index: -1;
}
