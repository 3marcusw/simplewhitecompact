/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this file,
 * You can obtain one at http://mozilla.org/MPL/2.0/. */

/* CSS Variables specific to this panel that aren't defined by the themes */
.theme-dark {
  --cell-border-color: rgba(255,255,255,0.15);
  --cell-border-color-light: rgba(255,255,255,0.1);
  --focus-cell-border-color: rgba(255,255,255,0.5);
  --row-alt-background-color: rgba(29,79,115,0.15);
  --row-hover-background-color: rgba(29,79,115,0.25);
}

.theme-light {
  --cell-border-color: rgba(0,0,0,0.15);
  --cell-border-color-light: rgba(0,0,0,0.1);
  --focus-cell-border-color: rgba(0,0,0,0.3);
  --row-alt-background-color: rgba(76,158,217,0.1);
  --row-hover-background-color: rgba(76,158,217,0.2);
}

html, body, #app, #memory-tool {
  height: 100%;
}

#memory-tool {
  /**
   * Flex: contains two children: .devtools-toolbar and #memory-tool-container,
   * which need to be laid out vertically. The toolbar has a fixed height and
   * the container needs to flex to fill out all remaining vertical space.
   */
  display: flex;
  flex-direction: column;
  --sidebar-width: 185px;
  /**
   * If --heap-tree-row-height changes, be sure to change HEAP_TREE_ROW_HEIGHT
   * in `devtools/client/memory/components/heap.js`.
   */
  --heap-tree-row-height: 14px;
  --heap-tree-header-height: 17px;
}
@supports (line-height:calc(1px)){ /* Firefox >= 48 */
  #memory-tool {
    --heap-tree-row-height: 18px;
    --heap-tree-header-height: 18px;
  }
}

/**
 * Toolbar
 */

.devtools-toolbar {
  /**
   * Flex: contains several children, which need to be laid out horizontally,
   * and aligned vertically in the middle of the container.
   */
  display: flex;
  align-items: center;
}

.devtools-toolbar > .toolbar-group:first-child { /* Firefox 45.0a1 --johnGraciliano */
  /**
   * We want this to be exactly at a `--sidebar-width` distance from the
   * toolbar's start boundary. A `.devtools-toolbar` has a 3px start padding.
   */
  flex: 0 0 calc(var(--sidebar-width) - 4px);
  border-inline-end: 1px solid var(--theme-splitter-color);
  margin-inline-end: 5px;
  padding-right: 1px;
}

.devtools-toolbar > .toolbar-group {
  /**
   * Flex: contains several children, which need to be laid out horizontally,
   * and aligned vertically in the middle of the container.
   */
  display: flex;
  align-items: center;
  flex: 1;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

.devtools-toolbar > button + .toolbar-group { /* Firefox 44.0a2 --johnGraciliano */
  /**
   * We want this to be exactly at a --sidebar-width distance from the
   * toolbar's start boundary. A .devtools-toolbar has a 3px start padding
   * and the preceeding .take-snapshot button is exactly 32px.
   */
  margin-inline-start: calc(var(--sidebar-width) - 3px - 32px - 2px);
  border-inline-start: 1px solid var(--theme-splitter-color);
  padding-inline-start: 5px;
}

.devtools-toolbar > .toolbar-group > label {
  /**
   * Flex: contains form controls and text, which need to be laid out
   * horizontally, vertically aligned in the middle of the container.
   */
  display: flex;
  align-items: center;
  margin-inline-end: 5px;
}

.devtools-toolbar > .toolbar-group > label.breakdown-by > span, /* Firefox < 47 --johnGraciliano */
.devtools-toolbar > .toolbar-group > label.display-by > span {
  margin-inline-end: 5px;
}

.devtools-toolbar > .toolbar-group > label.label-by > span {
  margin-inline-end: 5px;
}

/* The next two rule sets are added to improve the gaps between toolbar elements. --johnGraciliano*/
.devtools-toolbar > .toolbar-group:first-child{
  margin-inline-end: 2px;
}
.devtools-toolbar > label > span:first-child,
.devtools-toolbar > .toolbar-group > label > span:first-child{
  margin-inline-start: 3px;
}

.devtools-toolbar > label {
  display: flex;  /* --johnGraciliano */
  align-items: center;  /* --johnGraciliano */
  margin-inline-end: 5px;
}

#select-view {
  margin-inline-start: 5px;
}

.devtools-button.take-snapshot::before, /* Firefox 44.0a2 --johnGraciliano */
#take-snapshot::before {
  background-image: url(images/command-screenshot.png);
}
.theme-firebug .devtools-button.take-snapshot::before,
.theme-firebug #take-snapshot::before {
  background-image: url(images/firebug/command-screenshot.svg);
  filter: none;
}

#clear-snapshots::before {
  background-image: url(images/clear.svg);
}
.theme-firebug #clear-snapshots::before {
  background-image: url(images/firebug/clear.svg);
  filter: none;
}

#diff-snapshots::before {
  background-image: url(images/diff.svg);
}
.theme-firebug #diff-snapshots::before {
  background-image: url(images/firebug/diff.svg);
  filter: none;
}

#import-snapshot::before {
  background-image: url(images/import.svg);
}
.theme-firebug #import-snapshot::before {
  background-image: url(images/firebug/import.svg);
  filter: none;
}

/* Hide the text labels to make image only buttons (some versions of Firefox). --johnGraciliano */
#clear-snapshots,
#diff-snapshots,
#import-snapshot {
  font-size: 0;
  background-color: transparent;
}

/* The next two rule sets help the buttons behave as image only --johnGraciliano */
#clear-snapshots::before,
#diff-snapshots:not([disabled])::before,
#import-snapshot::before {
  opacity: .8;
}

#diff-snapshots[disabled]::before, /* The opacity for the button is already .5 */
#clear-snapshots:hover::before,
#diff-snapshots:not([disabled]):hover::before,
#import-snapshot:hover::before {
  opacity: 1;
}

@media (min-resolution: 1.1dppx) {
  .devtools-button.take-snapshot::before, /* Firefox 44.0a2 --johnGraciliano */
  #take-snapshot::before {
    background-image: url(images/command-screenshot@2x.png);
  }
}

/* I am excluding this bars --johnGraciliano *%
#record-allocation-stacks-label,
#pop-view-button-label {
  border-inline-end: 1px solid var(--theme-splitter-color);
  padding-inline-end: 5px;
}
%*********************************************/

/*** Removed to comform with icon only buttons --johnGraciliano ***%
%*** This removal is copied from a Firefox 50 update.           ***%
#import-snapshot,
#clear-snapshots {
  -moz-box-align: center;
  flex-grow: 1;
}
%******************************************************************/

.spacer {
  flex: 1;
}

#filter {
  align-self: stretch;
  margin: 2px;
}

#filter::-moz-placeholder {
  font-style: oblique;
}

/**
 * Container (sidebar + main panel)
 */

#memory-tool-container {
  /**
   * Flex: contains two children: .list (sidebar) and #heap-view (main panel),
   * which need to be laid out horizontally. The sidebar has a fixed width and
   * the main panel needs to flex to fill out all remaining horizontal space.
   */
  display: flex;
  /**
   * Flexing to fill out remaining vertical space. The preceeding sibling is
   * the toolbar. @see #memory-tool.
   */
  flex: 1;
  overflow: hidden;
}

/**
 * Sidebar
 */

.list {
  width: var(--sidebar-width);
  min-width: var(--sidebar-width);
  overflow-y: auto;
  margin: 0;
  padding: 0;
  background-color: var(--theme-sidebar-background);
  border-inline-end: 1px solid var(--theme-splitter-color);
}

.snapshot-list-item {
  /**
   * Flex: contains several children, which need to be laid out vertically.
   */
  display: flex;
  flex-direction: column;
  color: var(--theme-body-color);
  border-bottom: 1px solid rgba(128,128,128,0.15);
  padding: 8px;
  cursor: default;
}

.snapshot-list-item.selected {
  background-color: var(--theme-selection-background);
  color: var(--theme-selection-color);
}

.snapshot-list-item.selected ::-moz-selection {
  background-color: var(--theme-selection-color);
  color: var(--theme-selection-background);
}

.snapshot-list-item .snapshot-info {
  display: flex;
  justify-content: space-between;
  font-size: 90%;
}

.snapshot-list-item .snapshot-title {
  display: flex;
  justify-content: space-between;
}

.snapshot-list-item .save {
  text-decoration: underline;
  cursor: pointer;
}

.snapshot-list-item .delete {
  cursor: pointer;
  position: relative;
  min-height: 1em;
  min-width: 1.3em;
}

.theme-light .snapshot-list-item.selected .delete {
  filter: invert(1);
}

.snapshot-list-item .delete::before {
  background-image: url("images/close.svg");
  background-position: 0.2em 0;
}

.snapshot-list-item > .snapshot-title {
  margin-bottom: 14px;
}

.snapshot-list-item > .snapshot-title > input[type=checkbox] {
  margin: 0;
  margin-inline-end: 5px;
}

.snapshot-list-item > .snapshot-state,
.snapshot-list-item > .snapshot-totals {
  font-size: 90%;
  color: var(--theme-body-color-alt);
}

.snapshot-list-item.selected > .snapshot-state,
.snapshot-list-item.selected > .snapshot-totals {
  /* Text inside a selected item should not be custom colored. */
  color: inherit !important;
}

/**
 * Main panel
 */

.vbox {
  display: flex;
  flex-direction: column;
  width: 100%;
  height: 100%;
  overflow: auto;
  padding: 0;
  margin: 0;
}

.vbox > * {
  flex: 1;

  /**
   * By default, flex items have min-width: auto;
   * (https://drafts.csswg.org/css-flexbox/#min-size-auto)
   */
  min-width: 0;
}

#heap-view {
  /**
   * Flex: contains a .heap-view-panel which needs to fill out all the
   * available space, horizontally and vertically.
   */;
  display: flex;
  /**
   * Flexing to fill out remaining horizontal space. The preceeding sibling
   * is the sidebar. @see #memory-tool-container.
   */
  flex: 1;
  background-color: var(--theme-body-background);

  /**
   * By default, flex items have min-width: auto;
   * (https://drafts.csswg.org/css-flexbox/#min-size-auto)
   */
  min-width: 0;
  font-size: 90%;
  overflow-x: auto; /* Allow a horizontal scrollbar that moves the heap-view-panel as a whole: header + tree */
                    /* This addition needs the rule that follows to work properly --johnGraciliano */
}

#heap-view > :-moz-any([data-state="snapshot-state-saved-census"],[data-state="diffing-state-took-diff"]).heap-view-panel {
  min-width: 100ch; /* Prevent a scrollbar just for the tree but require one for the whole panel if the area is narrow --johnGraciliano */
}

#heap-view > .heap-view-panel {
  /**
   * Flex: can contain several children, including a tree with a header and
   * multiple rows, all of which need to be laid out vertically. When the
   * tree is visible, the header has a fixed height and tree body needs to flex
   * to fill out all remaining vertical space.
   */
  display: flex;
  flex-direction: column;
  /**
   * Flexing to fill out remaining horizontal space. @see #heap-view.
   */
  flex: 1;

  /**
   * By default, flex items have min-width: auto;
   * (https://drafts.csswg.org/css-flexbox/#min-size-auto)
   */
  min-width: 0;
}

#heap-view > .heap-view-panel > .snapshot-status,
#heap-view > .heap-view-panel > .take-snapshot,
#heap-view .empty,
#shortest-paths-select-node-msg {
  margin: auto;
  margin-top: 65px;
  font-size: 120%;
}

#heap-view > .heap-view-panel > .take-snapshot {
  padding: 5px;
}

#heap-view > .heap-view-panel[data-state="snapshot-state-error"] pre {
  background-color: var(--theme-body-background);
  margin: 20px;
  padding: 20px;
}

/* Two extra rules because no rule matches in toolbars.css --johnGraciliano */
.theme-dark .devtools-toolbarbutton.take-snapshot:hover {
  background: rgba(0, 0, 0, .3); /* Splitters */
}
.theme-light .devtools-toolbarbutton.take-snapshot:hover {
  background: rgba(170, 170, 170, .3); /* Splitters */
}

/**
 * Heap tree view header
 */

.header {
  /**
   * Flex: contains several span columns, all of which need to be laid out
   * horizontally. All columns except the last one have percentage widths, and
   * the last one needs to flex to fill out all remaining horizontal space.
   */
  display: flex;
  color: var(--theme-body-color);
  background-color: var(--theme-tab-toolbar-background);
  border-bottom: 1px solid var(--cell-border-color);
  flex: 0;
}

.header > span,
#shortest-paths-header {
  text-overflow: ellipsis;
  line-height: var(--heap-tree-header-height);
  justify-content: center;
  justify-self: center;
  white-space: nowrap;
}

.header > span {
  overflow: hidden;
}

.header > .heap-tree-item-name {
  justify-content: flex-start;
}

#shortest-paths {
  background-color: var(--theme-body-background);
  overflow: hidden;
  height: 100%;
  width: 100%;
}

#shortest-paths-select-node-msg {
  justify-self: center;
}

/**
 * Heap tree view body
 */

.tree {
  /**
   * Flexing to fill out remaining vertical space. @see .heap-view-panel
   */
  flex: 1;
  overflow-y: auto;
  background-color: var(--theme-body-background);
}

.tree-node {
  height: var(--heap-tree-row-height);
  line-height: var(--heap-tree-row-height);
  cursor: default;
}

.children-pointer {
  padding-inline-end: 5px;
}

.children-pointer:-moz-dir(rtl) {
  transform: scaleX(-1);
}
.children-pointer:dir(rtl) {
  transform: scaleX(-1);
}

/**
 * Heap tree view columns
 */

.heap-tree-item {
  /**
   * Flex: contains several span columns, all of which need to be laid out
   * horizontally. All columns except the last one have percentage widths, and
   * the last one needs to flex to fill out all remaining horizontal space.
   */
  display: flex;
}

:not(.tree-node-odd) + :not(:hover):not(.tree-node-odd):nth-child(2n+1).tree-node, /* For Firefox < 47 */
.tree-node-odd { /* For Firefox >= 47 */
  background-color: var(--row-alt-background-color);
}

.tree-node:hover {
  background-color: var(--row-hover-background-color);
}

.heap-tree-item.focused {
  background-color: var(--theme-selection-background);
  color: var(--theme-selection-color);
}

.heap-tree-item.focused ::-moz-selection {
  background-color: var(--theme-selection-color);
  color: var(--theme-selection-background);
}

.heap-tree-item-individuals,
.heap-tree-item-bytes,
.heap-tree-item-count,
.heap-tree-item-total-bytes,
.heap-tree-item-total-count {
  /**
   * Flex: contains several subcolumns, which need to be laid out horizontally.
   * These subcolumns may have specific widths or need to flex.
   */
  display: flex;
  /* Make sure units/decimals/... are always vertically aligned to right in both LTR and RTL locales */
  text-align: right;
  border-inline-end: var(--cell-border-color) 1px solid;
}

.heap-tree-item-count,
.heap-tree-item-total-count,
.heap-tree-item-bytes,
.heap-tree-item-total-bytes {
  width: 19ch; /* Fixed width to avoid missaligned headers when this is 10% and the vertical scrollbar is shown. */
  /*
   * Provision for up to 19 characters:
   *
   *     GG_MMM_KKK_BBB_100%
   *     |            |||  |
   *     '------------'|'--'
   *     14 ch for 10s | 4 ch for the largest % we will
   *     of GB and     | normally see: "100%"
   *     spaces every  |
   *     3 digits      |
   *                   |
   *             A space between the number and percent
   */
  min-width: 19ch;
}

.heap-tree-item-name {
  /**
   * Flex: contains an .arrow and some text, which need to be laid out
   * horizontally, vertically aligned in the middle of the container.
   */
  display: flex;
  align-items: center;
  /**
   * Flexing to fill out remaining vertical space.
   * @see .header and .heap-tree-item */
  flex: 1;
  padding-inline-start: 5px;
}

/**
 * Heap tree view subcolumns
 */

.heap-tree-number,
.heap-tree-percent,
.heap-tree-item-name {
  white-space: nowrap;
}

.heap-tree-number {
  padding: 0 3px;
  flex: 1;
  color: var(--theme-content-color3);
  /* Make sure number doesn't appear backwards on RTL locales */
  direction: ltr;
}

.heap-tree-percent {
  padding-inline-start: 3px;
  padding-inline-end: 3px;
}

.heap-tree-number,
.heap-tree-percent {
  font-family: var(--monospace-font-family);
}

.heap-tree-percent {
  width: 4ch;
}

.heap-tree-item.focused .heap-tree-number,
.heap-tree-item.focused .heap-tree-percent {
  color: inherit;
}

.heap-tree-item-individuals {
  width: 38px;
  min-width: 20px;
  overflow: hidden;
  margin: 0;
}

.heap-tree-item-individuals > button {
  height: 10px;
  width: 32px;
  margin: 0 auto;
  padding: 0;
}

/**
 * Tree map
 */

.tree-map-container {
  width: 100%;
  height: 100%;
  position: relative;
  overflow: hidden;
}

/**
 * Heap tree errors.
 */

.error::before {
  content: "";
  display: inline-block;
  width: 12px;
  height: 12px;
  max-height: 12px;
  background-image: url(images/webconsole.svg);
  background-size: 72px 60px;
  background-position: -24px -24px;
  background-repeat: no-repeat;
  margin: 0px;
  margin-top: 2px;
  margin-inline-end: 5px;
}

.theme-light .error::before {
  background-image: url(images/webconsole.svg#light-icons);
}

/**
 * Frame View components
 */

.separator,
.not-available,
.heap-tree-item-address {
  opacity: .5;
  margin-left: .5em;
  margin-right: .5em;
}

.heap-tree-item-address {
  font-family: monospace;
}

.no-allocation-stacks {
  border-color: var(--theme-splitter-color);
  border-style: solid;
  border-width: 0px 0px 1px 0px;
  text-align: center;
  padding: 5px;
}

/* .frame-link-* rules are moved into components-frame.css starting with Firefox 47 */
/* However those rules are more specific so the following are left here for Firefox 44-46 */
/* There is a chance to simply @import(components-frame.css) at the begining of this file. */
/* Otherwise, the rules may need to be synchronized. */

.focused .frame-link-filename,
.focused .frame-link-column,
.focused .frame-link-line,
.focused .frame-link-host,
.focused .frame-link-colon {
  color: var(--theme-selection-color);
}

.frame-link-filename {
  color: var(--theme-highlight-blue);
  cursor: pointer;
}

.frame-link-filename:hover {
  text-decoration: underline;
}

.frame-link-column,
.frame-link-line,
.frame-link-colon {
  color: var(--theme-highlight-orange);
}

.frame-link-host {
  margin-inline-start: 5px;
  font-size: 90%;
  color: var(--theme-content-color2);
}

.frame-link-function-display-name {
  margin-inline-end: 5px;
}

/**
 * Dagre-D3 graphs
 */

.edgePath path {
  stroke-width: 1px;
  fill: none;
}

.theme-dark .edgePath path {
  stroke: var(--theme-body-color-alt);
}
.theme-light .edgePath path {
  stroke: var(--theme-splitter-color);
}

g.edgeLabel rect {
  fill: var(--theme-body-background);
}
g.edgeLabel tspan {
  fill: var(--theme-body-color-alt);
}

.nodes rect {
  stroke-width: 1px;
}

.nodes rect {
  stroke: var(--theme-tab-toolbar-background);
}
.theme-light rect {
  fill: var(--theme-tab-toolbar-background);
}
.theme-dark rect {
  fill: var(--theme-toolbar-background);
}

text {
  font-weight: 300;
  font-family: "Helvetica Neue", Helvetica, Arial, sans-serf;
  font-size: 14px;
}

text {
  fill: var(--theme-body-color-alt);
}
