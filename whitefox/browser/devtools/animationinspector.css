/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

/* Animation-inspector specific theme variables */

.theme-dark {
  --even-animation-timeline-background-color: rgba(255,255,255,0.03);
}

.theme-light {
  --even-animation-timeline-background-color: rgba(128,128,128,0.03);
}

.theme-firebug {
  --even-animation-timeline-background-color: rgba(128,128,128,0.03);
}

/* To match markup-view.css --johnGraciliano */
.theme-firebug .theme-fg-color3 {
  color: var(--theme-graphs-full-blue);
}

.theme-firebug .theme-fg-color6 {
  color: var(--theme-highlight-red);
}
/*********************************************/


:root {
  /* How high should toolbars be */
  --toolbar-height: 20px; /* Toolbar height for content-box */
  --toolbar-border-height: 21px; /* Toolbar height for border-box -- 1px for the border */
  /* How wide should the sidebar be (should be wide enough to contain long
     property names like 'border-bottom-right-radius' without ellipsis) */
  /* --timeline-sidebar-width: 200px;    *********************************** This value is 'hard coded' through this file --johnGraciliano */
  /* How high should animations displayed in the timeline be */
  /*--timeline-animation-height: 20px;   *********************************** This value is 'hard coded' through this file --johnGraciliano */
  /* The size of a keyframe marker in the keyframes diagram */
  /* --keyframes-marker-size: 10px;      *********************************** This value is 'hard coded' through this file --johnGraciliano */
  /* The color of the time graduation borders. This should match the the color
     devtools/client/animationinspector/utils.js */
  /* --time-graduation-border-color: rgba(128, 136, 144, .5);  ************* This value is 'hard coded' through this file --johnGraciliano */
}
:root.theme-firebug {
  --toolbar-height: 21px;
  --toolbar-border-height: 30px; /* 1px for border and 8px for padding */
}

.animation { /* FF 46.0 & FF < 46.0 */
  --timeline-border-color: var(--theme-body-color);
  --timeline-background-color: var(--theme-splitter-color);
}

.animation.cssanimation { /* FF 46.0 */
  --timeline-border-color: var(--theme-highlight-lightorange);
  --timeline-background-color: var(--theme-contrast-background);
}

.animation.csstransition { /* FF 46.0 */
  --timeline-border-color: var(--theme-highlight-bluegrey);
  --timeline-background-color: var(--theme-highlight-blue);
}

.animation.scriptanimation { /* FF 47.0 */
  --timeline-border-color: var(--theme-highlight-green);
  --timeline-background-color: var(--theme-graphs-green);
}

html {
  height: 100%;
}

body {
  margin: 0;
  padding: 0;
  display : flex;
  flex-direction: column;
  height: 100%;
  overflow: hidden;
  color: var(--theme-content-color3);
}

/* The top toolbar, containing the toggle-all button. And the timeline toolbar,
   containing playback control buttons, shown only when there are animations
   displayed in the timeline */

#toolbar, /* For Firefox 42 & earlier */
#global-toolbar,
#timeline-toolbar {
  box-sizing: content-box;
  border-bottom: 1px solid var(--theme-splitter-color);
  display: flex;
  flex-direction: row;
  align-items: center;
  justify-content: flex-end;
  height: var(--toolbar-height);
}

#timeline-toolbar {
  display: none;
  justify-content: flex-start;
}

[timeline] #global-toolbar {
  display: none;
}

[timeline] #timeline-toolbar {
  display: flex;
}

.theme-firebug .theme-toolbar {
  height: 21px !important; /* To override 28px setting in firebug-theme.css --johnGraciliano */
  min-height: 21px !important; /* To override 28px setting in firebug-theme.css --johnGraciliano */
}

.theme-firebug .theme-toolbar {
  padding: 4px;        /* To maintain uniform appearance. --johnGraciliano */
}

#toolbar .label, /* Firefox 42 & earlier */
#global-toolbar .label,
#timeline-toolbar .label {
  padding: 1px 4px;
}

/* The main animations container */

#sidebar-panel-animationinspector {
  height: 100%;
  width: 100%;
}

#players:not(:empty) {
  height: 100%; /* Firefox 37 only! */
  overflow-x: hidden;
  overflow-y: auto;
}

.theme-toolbar ~ #players {
  height: calc(100% - var(--toolbar-border-height));
}

[empty] #players {
  display: none;
}

/* The error message, shown when an invalid/unanimated element is selected */

#error-message {
  padding-top: 10%;
  text-align: center;
  flex: 1;
  overflow: auto;

  /* The error message is hidden by default */
  display: none;
}

[empty] #error-message {
  display: block;
}

/* Element picker, toggle-all buttons, timeline pause button, ... */

#global-toolbar > *,
#timeline-toolbar > * {
  box-sizing: border-box;
  min-height: var(--toolbar-height);
  border-color: var(--theme-splitter-color);
  border-width: 0 0 0 1px;
  display: flex;
  justify-content: center;
  align-items: center;
}

#global-toolbar .label,
#timeline-toolbar .label {
  padding: 0 5px;
  border-style: solid;
}

#global-toolbar .devtools-button,
#timeline-toolbar .devtools-button {
  margin: 0;
  padding: 0;
}

#timeline-toolbar .devtools-button,
#timeline-toolbar .label {
  border-width: 0 1px 0 0;
}

.theme-dark #global-toolbar .label,
.theme-dark #timeline-current-time {
  border-color: rgba(0,0,0,.4);
}

.theme-light #global-toolbar .label,
.theme-light #timeline-current-time {
  border-color: rgba(170,170,170,.5);
}

#element-picker::before {
  background-image: url(images/command-pick.png);
}

.pause-button::before {
  background-image: url(images/debugger-pause.png);
}

#rewind-timeline::before {
  background-image: url(images/rewind.png);
}

.pause-button.paused::before {
  background-image: url(images/debugger-play.png);
}

@media (min-resolution: 1.1dppx) {
  #element-picker::before {
    background-image: url(images/command-pick@2x.png);
  }

  .pause-button::before {
    background-image: url(images/debugger-pause@2x.png);
  }

  .pause-button.paused::before {
    background-image: url(images/debugger-play@2x.png);
  }

  #rewind-timeline::before {
    background-image: url(images/rewind@2x.png);
  }
}

.theme-firebug #element-picker::before {
  background-image: url(images/firebug/command-pick.svg);
}

.theme-firebug .pause-button::before {
  background-image: url(images/firebug/pause.svg);
  filter: none;
}

.theme-firebug #rewind-timeline::before {
  background-image: url(images/firebug/rewind.svg);
  filter: none;
}

.theme-firebug .pause-button.paused::before {
  background-image: url(images/firebug/play.svg);
  filter: none;
}

#timeline-rate select.devtools-button {
  -moz-appearance: none;
  text-align: center;
  font-family: inherit;
  color: var(--theme-body-color);
  font-size: 1em;
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-image: url(images/dropmarker.svg);
  background-repeat: no-repeat;
  background-position: calc(100% - 4px) center;
  padding-right: 1em;
}

#timeline-rate {
  position: relative;
  width: 4.5em;
}


/* Corrections for the Firebug theme --johnGraciliano */

.theme-firebug #timeline-rate {
  border-width: 0 !important;
  background-color: transparent;
}

.theme-firebug #global-toolbar > button,
.theme-firebug #timeline-toolbar > button,
.theme-firebug #timeline-rate > .devtools-button {
  border: 1px solid transparent;
  background-color: transparent;
}
.theme-firebug #element-picker {
  border: 1px solid transparent;
  background-color: transparent;
  min-height: 24px;
}
.theme-firebug #timeline-rate > .devtools-button {
  border-color: transparent rgba(0,0,0,0.125);
}
.theme-firebug button:hover + #timeline-rate > .devtools-button {
  border-inline-start-color: transparent;
}
.theme-firebug #timeline-toolbar > .label {
  border-inline-end-width: 0;
}
.theme-firebug #global-toolbar > .label {
  border-inline-start-width: 0;
}

.theme-firebug #element-picker:hover,
.theme-firebug #global-toolbar > button:hover,
.theme-firebug #timeline-toolbar > button:hover {
  border-color: rgba(0, 0, 0, 0.2);
  box-shadow: 1px 1px 1px rgba(255, 255, 255, 0.6) inset, 0 0 1px rgba(255, 255, 255, 0.6) inset,
      0 0 2px rgba(0, 0, 0, 0.05);
  background-image: linear-gradient(rgba(255, 255, 255, 0.4), rgba(255, 255, 255, 0.2));
  background-repeat: no-repeat;
  background-position: 0 0;
}

.theme-firebug #element-picker:hover:active,
.theme-firebug #global-toolbar > button:hover:active,
.theme-firebug #timeline-toolbar > button:hover:active {
  border-color: rgba(0, 0, 0, 0.3);
  box-shadow: 1px 1px 1px rgba(0, 0, 0, 0.1) inset, 0 0 1px rgba(0, 0, 0, 0.1) inset,
      0 0 2px rgba(0, 0, 0, 0.05);
  background-image: linear-gradient(rgba(0, 0, 0, 0.2), transparent);
}

.theme-firebug #element-picker:not(:active)[checked=true] {
  background: rgba(255,255,255,.05) linear-gradient(rgba(0, 0, 0, 0.1), transparent) no-repeat;
  color: inherit;
  border-color: rgba(0, 0, 0, 0.3);
  box-shadow: 1px 1px 1px rgba(0, 0, 0, 0.1) inset, 0 0 1px rgba(0, 0, 0, 0.1) inset;
}

.theme-firebug #timeline-rate > .devtools-button:hover {
  border-color: rgba(0, 0, 0, 0.2);
  box-shadow: 1px 1px 1px rgba(255, 255, 255, 0.6) inset, 0 0 1px rgba(255, 255, 255, 0.6) inset,
      0 0 2px rgba(0, 0, 0, 0.05);
  background-image: url(images/dropmarker.svg), linear-gradient(rgba(255, 255, 255, 0.4), rgba(255, 255, 255, 0.2));
  background-repeat: no-repeat;
  background-position: calc(100% - 4px) center, 0 0;
}

.theme-firebug #timeline-rate > .devtools-button[checked],
.theme-firebug #timeline-rate > .devtools-button:hover:active {
  border-color: rgba(0, 0, 0, 0.3);
  box-shadow: 1px 1px 1px rgba(0, 0, 0, 0.1) inset, 0 0 1px rgba(0, 0, 0, 0.1) inset,
      0 0 2px rgba(0, 0, 0, 0.05);
  background-image: url(images/dropmarker.svg), linear-gradient(rgba(0, 0, 0, 0.2), transparent);
}


/* Animation timeline component (Firefox 43 and later) */

.animation-timeline {
  position: relative;
  display: flex;
  flex-direction: column;
}

/** The 'time graduations' will be done drawn by the style using the 'time ticks'       **\
 ** The following was used in Firefox 43-48 but will be ignored and eventually deleted. **
  .animation-timeline {
    /* The timeline gets its background-image from a canvas element created in
       /browser/devtools/animationinspector/utils.js drawGraphElementBackground
       thanks to document.mozSetImageElement("time-graduations", canvas)
       This is done so that the background can be built dynamically from script *|
    background-image: -moz-element(#time-graduations);
    background-repeat: repeat-y;
    /* The animations are drawn away from the left edge so that animated nodes
       can be displayed in a sidebar *|
    background-position: 200px /*var(--timeline-sidebar-width)*|  0;
  }
\*****************************************************************************************/


/* Useful for positioning animations or keyframes in the timeline */
.animation-timeline .track-container {
  position: absolute;
  top: 0;
  left: 200px /*var(--timeline-sidebar-width)*/ ;
  /* Leave the width of a marker right of a track so the 100% markers can be
     selected easily */
  right: 10px /*var(--keyframes-marker-size)*/ ;
  height: 20px /*var(--timeline-animation-height)*/ ;
}

.animation-timeline .scrubber-wrapper {
  position: absolute;
  left: 200px /* var(--timeline-sidebar-width) */ ;
  /* Leave the width of a marker right of a track so the 100% markers can be
     selected easily */
  right: 10px /*var(--keyframes-marker-size)*/ ;
  height: 100%;
}

.animation-timeline > .scrubber { /* Firefox 43-44 */
  padding-left: 200px /* var(--timeline-sidebar-width) */ ;
  top: 0;
}

.animation-timeline .scrubber {
  z-index: 5;
  pointer-events: none;
  position: absolute;
  /* Make the scrubber as tall as the viewport minus the toolbar height and the
     header-wrapper's borders */
  height: calc(100vh - var(--toolbar-border-height));
  min-height: 100%;
  width: 0;
  border-right: 1px solid red;
  box-sizing: border-box;
}

/* The scrubber handle is a transparent element displayed on top of the scrubber
   line that allows users to drag it */
.animation-timeline .scrubber .scrubber-handle {
  position: absolute;
  height: 100%;
  /* Make it thick enough for easy dragging */
  width: 6px;
  right: -1.5px;
  cursor: col-resize;
  pointer-events: all;
}

.animation-timeline .scrubber:empty::before, /* Firefox 43 */
.animation-timeline .scrubber .scrubber-handle::before { /* Firefox >= 44 */
  box-sizing: content-box;
  content: "";
  position: sticky;
  top: 0;
  width: 1px;
  border-top: 5px solid red;
  border-left: 5px solid transparent;
  border-right: 5px solid transparent;
}
.animation-timeline .scrubber:empty::before { /* Firefox 43 */
  position: absolute;
  right: -6px;
}

.animation-timeline .scrubber ~ .time-header { /* Firefox 43-44 */
  position: absolute;
  top: 0;
  left: 200px /*var(--timeline-sidebar-width)*/ ;
  right: 0;
  height: 100%;
}

.animation-timeline .time-header {
  box-sizing: content-box;
  min-height: 20px /*var(--timeline-animation-height)*/ ;
  cursor: col-resize;
  -moz-user-select: none;
}

.animation-timeline > .time-header {  /* Firefox 39-49 */
  height: 100%;
}

.animation-timeline > * > .time-header > .header-item {
  position: absolute;
  height: 100%;
  padding-top: 3px;
  border-left: 0.5px solid rgba(128,136,144,.5) /*var(--time-graduation-border-color)*/;
}

.animation-timeline > .header-wrapper {
  position: sticky;
  top: 0;
  background-color: var(--theme-body-background);
  border-bottom: 1px solid rgba(128,136,144,.5) /*var(--time-graduation-border-color)*/;
  z-index: 3;
  height: 20px /*var(--timeline-animation-height)*/;
  overflow: hidden;
}

.animation-timeline > .time-body {
  height: 100%;
}

.animation-timeline > .time-header > .time-tick,  /* Firefox 43-49 */
.animation-timeline > .time-body > .time-tick {  /* Firefox >= 50 */
  -moz-user-select: none;
  position: absolute;
  width: 0;
  /* When scroll bar is shown, make it covers entire time-body */
  height: 100%;
  /* When scroll bar is hidden, make it as tall as the viewport minus the
     timeline animation height and the header-wrapper's borders */
  min-height: calc(100vh - var(--toolbar-border-height));
  border-left: 0.5px solid rgba(128,136,144,.5) /*var(--time-graduation-border-color)*/;
  box-sizing: border-box;
}

.animation-timeline > .time-header > .time-tick {  /* Firefox 39-49 */
  top: 0;
  padding-top: 3px;
  width: auto;
}

.animation-timeline .animations {
  width: 100%;
  height: 100%;
  padding: 0;
  list-style-type: none;
  margin-top: 0;
  margin-bottom: 0;
}

.animation-timeline .scrubber ~ .animations, /* Firefox 43-44 */
.animation-timeline > .time-header.track-container ~ .animations { /* Firefox 45-49 */
  margin-top: 20px /*var(--timeline-animation-height)*/ ;
  border-top: 1px solid rgba(128,136,144,.5) /*var(--time-graduation-border-color)*/ ;
}

/* Animation block widgets */

.animation-timeline .animation {
  padding: 2px 0; /* --johnGraciliano */
  height: 20px /*var(--timeline-animation-height)*/ ;
  position: relative;
}

.animation-timeline .scrubber ~ .animations .animation:nth-child(2n+1) { /* Firefox 43-44 */
  background-color: var(--even-animation-timeline-background-color);
}

/* We want animations' background colors to alternate, but each animation has
   a sibling (hidden by default) that contains the animated properties and
   keyframes, so we need to alternate every 4 elements. */
.animation-timeline .scrubber-wrapper ~ .animations .animation:nth-child(4n+1) { /* Firefox 45 & later */
  background-color: var(--even-animation-timeline-background-color);
}

.animation-timeline .animation .target {
  width: 200px /*var(--timeline-sidebar-width)*/ ;
  height: 100%;
  overflow: hidden;
  display: flex;
  align-items: center;
}

.animation-timeline .animation-target {
  background-color: transparent;
}

.animation-timeline .scrubber ~ .animations .animation .time-block { /* Firefox 43-44 */
  position: absolute;
  top: 2px;
  left: 200px /*var(--timeline-sidebar-width)*/ ;
  right: 0;
  height: 20px /*var(--timeline-animation-height)*/ ;
}

.animation-timeline .scrubber-wrapper ~ .animations .animation .time-block { /* Firefox 45 & later */
  cursor: pointer;
  top: 2px; /* I had this in the rule for '.animation-timeline .track-container', but that was wrong, it goes here. --johnGraciliano */
}

/* Animation iterations */

.animation-timeline .animation .iterations {
  position: absolute; /* For Firefox version >= 46, the next rule takes care of Firefox versions < 46 */
  height: 100%;
  box-sizing: border-box;

  /* Iterations of the animation are displayed with a repeating linear-gradient
     which size is dynamically changed from JS. The gradient only draws 1px
     borders between each iteration. These borders must have the same color as
     the border of this element */
  background-image:
    linear-gradient(to left,
                    var(--timeline-border-color) 0,
                    var(--timeline-border-color) 1px,
                    transparent 1px,
                    transparent 2px);
  border: 1px solid var(--timeline-border-color);
  /* Border-right is already handled by the gradient */
  border-width: 1px 0 1px 1px;

  /* The background color is set independently */
  background-color: var(--timeline-background-color);
}

.animation-timeline .animation .iterations:only-child { /* FF < 46.0 */
  position: relative;
}
.animation-timeline .animation .iterations:not(:only-child)#REMOVED-RULE { /* FF 46.0 */ /******* THIS IS NOW OBSOLETE -johnGraciliano ******/
  position: absolute;
  /* Border-right is already handled by the gradient */
  /*     border-width: 1px 0 1px 1px;  ****UNNEEDED!  REPEATITIVE! *****/
}

.animation-timeline .animation > * > .cssanimation { /* FF < 46.0 */
  --timeline-border-color: var(--theme-highlight-lightorange);
  --timeline-background-color: var(--theme-contrast-background);
}

.animation-timeline .animation > * > .csstransition { /* FF < 46.0 */
  --timeline-border-color: var(--theme-highlight-bluegrey);
  --timeline-background-color: var(--theme-highlight-blue);
}

.animation-timeline .animation .iterations.infinite::before,
.animation-timeline .animation .iterations.infinite::after {
  content: "";
  position: absolute;
  top: 0;
  right: 0;
  width: 0;
  height: 0;
  border-right: 4px solid var(--theme-body-background);
  border-top: 4px solid transparent;
  border-bottom: 4px solid transparent;
}

.animation-timeline .animation .iterations.infinite::after {
  bottom: 0;
  top: unset;
}

.animation-timeline .animation .iterations > .name { /* FF < 46.0 */
  color: var(--theme-selection-color);
  height: 100%;
  width: 100%;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  line-height: 150%;
  padding: 0 2px;
}
.animation-timeline .animation .iterations + .name { /* FF >= 46.0 */
  position: absolute;
  color: var(--theme-selection-color);
  height: 100%;
  display: flex;
  align-items: center;
  padding: 0 2px;
  box-sizing: border-box;
  /* --fast-track-icon-width: 15px; %*** The variable value will replace the references for speed --johnGraciliano ***/
  z-index: 1;
}

.animation-timeline .animation > * > .name > div { /* FF >= 46.0 */
  /* Flex items don't support text-overflow, so a child div is used */
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

/* .animation-timeline .fast-track .iterations > .name  %*** Proven selector.  Test selector in next. --johnGraciliano */
.animation-timeline .fast-track > * > .iterations > .name { /* FF < 46.0 */
  /* Animations running on the compositor have the fast-track background image*/
  background-image: url("images/animation-fast-track-full.svg");
  background-repeat: no-repeat;
  background-position: calc(100% - 5px) center;
}

/* .animation-timeline .fast-track .name > div   %*** Proven selector.  Test selector in next. --johnGraciliano */
.animation-timeline .fast-track > * > .name > div { /* FF >= 46.0 */
  width: calc(100% - 15px /* = var(--fast-track-icon-width) */ );
}

/* .animation-timeline .fast-track .iterations + .name::after   %*** Proven selector.  Test selector in next. --johnGraciliano */
.animation-timeline .fast-track > * > .iterations + .name::after { /* FF >= 46.0 */
  /* Animations running on the compositor have the fast-track background image*/
  content: "";
  display: block;
  position: absolute;
  top: 1px;
  right: 0;
  height: 100%;
  width: 15px /* = var(--fast-track-icon-width) */ ;
  z-index: 1;

  background-repeat: no-repeat;
  background-position: center;
  background-color: white; /*** FF49 ***/
  clip-path: url(images/animation-fast-track.svg#thunderbolt); /*** FF49 ***/
}

/* The defaut background-color in the rule above makes unecessary to have a rule for the selector:
.animation-timeline .fast-track.all-properties > * > .iterations +  .name::after */

.animation-timeline /*.fast-track*/.some-properties > * > .iterations +  .name::after {
  background-color: var(--theme-content-color3);
}

.animation-timeline .animation .delay,
.animation-timeline .animation .end-delay {
  position: absolute;
  height: 100%; /* For FF >= 46 may use selector ".animation-timeline .animation .iterations ~ .delay {...}". For FF < 46 see next rule set */
  border: 1px solid var(--timeline-border-color);
  box-sizing: border-box;
}

.animation-timeline .animation .iterations > .delay { /* FF < 46.0 */
  top: 0;
  /* Make sure the delay covers up the animation border */
  transform: translate(-1px, -1px);
  height: calc(100% + 2px);
}

.animation-timeline .animation .delay {
  border-width: 1px 0 1px 1px;
  background-image: repeating-linear-gradient(45deg,
                                              transparent,
                                              transparent 1px,
                                              var(--theme-selection-color) 1px,
                                              var(--theme-selection-color) 4px);
  background-color: var(--timeline-border-color);
}

.animation-timeline .animation .end-delay {
  border-width: 1px 1px 1px 0;
  background-image: repeating-linear-gradient(
                      -45deg,
                      transparent,
                      transparent 3px,
                      var(--timeline-border-color) 3px,
                      var(--timeline-border-color) 4px);
}

.animation-timeline .animation .delay.negative,
.animation-timeline .animation .end-delay.negative {
  /* Negative delays are displayed on top of the animation, so they need a
     right border. Whereas normal delays are displayed just before the
     animation, so there's already the animation's left border that serves as
     a separation. */
  border-width: 1px;
}

/* Animation target node gutter, contains a preview of the dom node */

.animation-target {
  background-color: var(--theme-toolbar-background);
  padding: 0 4px;
  box-sizing: border-box;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  cursor: pointer;
}

.animation-target .attribute-name {
  padding-left: 4px;
}

.animation-target .node-highlighter,
.animation-target .node-selector {
  background: url("images/vview-open-inspector.png") no-repeat 0 0;
  padding-left: 16px;
  margin-right: 5px;
  cursor: pointer;
}

.animation-target .node-highlighter:hover,
.animation-target .node-selector:hover {
  filter: url(images/filters.svg#checked-icon-state);
}

.animation-target .node-highlighter:active,
.animation-target .node-highlighter.selected,
.animation-target .node-selector:active {
  filter: url(images/filters.svg#checked-icon-state) brightness(0.9);
}

/* Inline keyframes info in the timeline */

.animation-timeline .animated-properties:not(.selected) {
  display: none;
}

.animation-timeline .animated-properties {
  background-color: var(--theme-selection-background-semitransparent);
}

.animation-timeline .animated-properties ul {
  margin: 0;
  padding: 0;
  list-style-type: none;
}

.animation-timeline .animated-properties .property {
  height: 20px /*var(--timeline-animation-height)*/ ;
  position: relative;
}

.animation-timeline .animated-properties .property:nth-child(2n) {
  background-color: var(--even-animation-timeline-background-color);
}

.animation-timeline .animated-properties > * > .name {
  width: 200px /*var(--timeline-sidebar-width)*/ ;
  padding-right: 10px /*var(--keyframes-marker-size)*/ ;
  box-sizing: border-box;
  height: 100%;
  color: var(--theme-body-color-alt);
  white-space: nowrap;
  display: flex;
  justify-content: flex-end;
  align-items: center;
}

.animation-timeline .animated-properties > * > .name > div {
  overflow: hidden;
  text-overflow: ellipsis;
}

.animation-timeline .animated-properties.cssanimation .oncompositor::before {
  background-color: var(--theme-contrast-background);
}

.animation-timeline .animated-properties.csstransition .oncompositor::before {
  background-color: var(--theme-highlight-blue);
}

.animation-timeline .animated-properties.scriptanimation .oncompositor::before {
  background-color: var(--theme-graphs-green);
}

.animation-timeline .animated-properties .oncompositor::before {
  content: "";
  display: inline-block;
  width: 17px;
  height: 17px;
  clip-path: url(images/animation-fast-track.svg#thunderbolt);
  vertical-align: middle;
}

.animation-timeline .animated-properties .warning {
  text-decoration: underline dotted;
}

.animation-timeline .animated-properties .frames {
  /* The frames list is absolutely positioned and the left and width properties
     are dynamically set from javascript to match the animation's startTime and
     duration */
  position: absolute;
  top: 0;
  height: 100%;
  /* Using flexbox to vertically center the frames */
  display: flex;
  align-items: center;
}

/* Keyframes diagram, displayed below the timeline, inside the animation-details
   element. */

.keyframes {
  /* Actual keyframe markers are positioned absolutely within this container and
     their position is relative to its size (we know the offset of each frame
     in percentage) */
  position: relative;
  width: 100%;
  height: 0;
}

.keyframes.cssanimation {
  background-color: var(--theme-contrast-background);
}

.keyframes.csstransition {
  background-color: var(--theme-highlight-blue);
}

.keyframes.scriptanimation {
  background-color: var(--theme-graphs-green);
}

.keyframes > .frame {
  position: absolute;
  top: 0;
  width: 0;
  height: 0;
  background-color: inherit;
  cursor: pointer;
}

.keyframes > .frame::before {
  content: "";
  display: block;
  transform: translateX(-5px) translateY(-5px); /*
    translateX(calc(var(--keyframes-marker-size) * -.5))
    translateY(calc((var(--timeline-animation-height) - var(--keyframes-marker-size)) * -.5)); %* --johnGraciliano */
  width: 10px /*var(--keyframes-marker-size)*/ ;
  height: 10px /*var(--keyframes-marker-size)*/ ;
  border-radius: 100%;
  background-color: inherit;
}

/* All that follows is for Firefox 42 and earlier */
@supports not (hyphens:none) {

/* Animation title gutter, contains the name, duration, iteration */

.animation-title {
  background-color: var(--theme-toolbar-background);
  border-bottom: 1px solid var(--theme-splitter-color);
  padding: 1px 4px;
  word-wrap: break-word;
  overflow: auto;
}

.animation-title .meta-data {
  float: right;
}

.animation-title strong {
  margin: 0 .5em;
}

.animation-title .meta-data .compositor-icon {
    display: none;
    background-image: url("images/animation-fast-track-blue.svg");
    background-position: left center;        /* --johnGraciliano */
    background-repeat: no-repeat;
    padding-left: 12px;
    /* Make sure the icon is positioned above the timeline range input so that
       its tooltip appears on hover */
    z-index: 1;
    position: relative;
}

/* Timeline widget */ /* And button#toggle-all */

/* Disabled playerWidget when the animation has ended */
/* #players.theme-toolbar to guard only Firefox <= 39.0  --johnGraciliano */
#players.theme-toolbar > .finished {
  pointer-events: none;
  opacity: .5;
}

#toolbar #toggle-all {
  border: 0;
  -moz-border-start-style: solid;
  -moz-border-start-width: 1px;
  -moz-border-start-color: var(--theme-splitter-color);
  min-height: var(--toolbar-height);
}

.timeline {
  height: 20px /*var(--timeline-animation-height)*/ ;
  width: 100%;
  display: flex;
  flex-direction: row;
  border-bottom: 1px solid var(--theme-splitter-color);
}

.timeline .playback-controls {
  display: flex;
  flex-direction: row;
  background-color: var(--theme-toolbar-background);
}

/* Playback control buttons */

.timeline .playback-controls select,
.timeline .playback-controls button {
  flex-grow: 1;
  border-width: 0 1px 0 0;
  border-style: solid;
  border-color: var(--theme-splitter-color);
  margin: 0;
}

#toggle-all::before,
.timeline .toggle::before {
  background-image: url(./images/debugger-pause.png);
}

#toggle-all.paused::before,
.paused .timeline .toggle::before,
.finished .timeline .toggle::before {
  background-image: url(./images/debugger-play.png);
}

.timeline .ff::before {
  background-image: url(./images/fast-forward.png);
}

.timeline .rw::before {
  background-image: url(./images/rewind.png);
}

@media (min-resolution: 1.1dppx) {
  #toggle-all::before,
  .timeline .toggle::before {
    background-image: url(./images/debugger-pause@2x.png);
  }

  #toggle-all.paused::before,
  .paused .timeline .toggle::before,
  .finished .timeline .toggle::before {
    background-image: url(./images/debugger-play@2x.png);
  }

  .timeline .ff::before {
    background-image: url(./images/fast-forward@2x.png);
  }

  .timeline .rw::before {
    background-image: url(./images/rewind@2x.png);
  }
}

.timeline .rate {
  -moz-appearance: none;
  text-align: center;
  color: var(--theme-body-color);
  border-right: 1px solid var(--theme-splitter-color);
}

/* Slider (input type range) container */

.timeline .sliders-container {
  flex-grow: 1;
  height: 100%;
  position: relative;
  border-width: 1px 0;
  background-color: var(--theme-sidebar-background); /* --johnGraciliano */
}

.timeline .sliders-container .current-time {
  position: absolute;
  padding: 0;
  margin: 0;
  left: 0;
  width: 100%;
  height: 100%;
}

.timeline .sliders-container .current-time::-moz-range-thumb {
  height: 100%;
  width: 4px;
  border-radius: 0;
  border: none;
  background: var(--theme-highlight-blue);
}

.timeline .sliders-container .current-time::-moz-range-track {
  width: 100%;
  height: 50px;
  background: transparent;
}

/* Current time label */

.timeline .time-display {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 50px;
  border-left: 1px solid var(--theme-splitter-color);
  background: var(--theme-toolbar-background);
}

}